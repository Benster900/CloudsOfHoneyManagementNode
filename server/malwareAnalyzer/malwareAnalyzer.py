"""
Author: Ben Bornholm
Date: 1-9-17
Description: Takes in binary and pulls out interesting artifacts
"""
import hashlib
import os
import magic
import re
import rethinkdb as r
from sqlalchemy import create_engine
import yara

# MariaDB table schema
users = Table('malware', metadata,
        Column('id', Integer, primary_key=True),
        Column('name', String),
        Column('filetype', String),
        Column('md5Hash', String),
        Column('sha1Hash', String),
        Column('sha256Hash', String),
        Column('ssdeepHash', String),
        Column('honeypotType', String),
        Column('honeypotIPaddr', String),
        Column('date', String),
        Column('lastSeen', String),
        Column('hits', String),
)



def databaseInsert():
    # connect to database
    r.connect( "127.0.0.1", 28015).repl()
    engine = create_engine('mysql://scott:tiger@localhost/foo')
    conn = engine.connect()

    # Set values
    ins = users.insert().values(name='jack', fullname='Jack Jones')

    # Insert into mysql
    try:
        result = conn.execute(ins)
    except:





def fileAnalysis(fileName):
        print fileName
        fileType = magic.from_file(fileName)

        # Extract filetype from magic
        if ',' in fileType:
            print fileType[:fileType.find(',')]
        else:
            print fileType

        # Hash each file: md5, sha1, sha256, ssdeep
        md5Str = hashlib.md5(open(fileName, 'rb').read()).hexdigest()
        sha1Str = hashlib.sha1(open(fileName, 'rb').read()).hexdigest()
        sha256Str = hashlib.sha256(open(fileName, 'rb').read()).hexdigest()
        print md5Str, sha1Str, sha256Str
        #ssdeepStr = ssdeep.hash_from_file(fileName)

        # Get strings from file
        re.findall("[a-zA-Z0-9]+",open(fileName,"rb").read())


def yaraRule(fileName, rules):
    matches = rules.match(data=f.read())



def main():
    #malwareDir='/srv/malwareSamples'
    malwareDir='/Users/bbornholm2194/Downloads/'

    # compile your YARA rules
    rules = yara.compile('yararules')



    # directory traversal
    for root, directories, filenames in os.walk(malwareDir):
            for filename in filenames:
                print os.path.join(root,filename)
                fileAnalysis(os.path.join(root,filename))
                yaraRule(os.path.join(root,filename), rules)


main()
